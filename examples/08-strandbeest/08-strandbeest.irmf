/*{
  irmf: "1.0",
  materials: ["PLA"],
  max: [133,133,99],
  min: [-133,-133,-99],
  units: "mm",
}*/

float cube(in vec3 size, in bool center, in vec3 xyz) {
	xyz /= size;
	if (!center) { xyz -= vec3(0.5); }
	if (any(greaterThan(abs(xyz), vec3(0.5)))) { return 0.0; }
	return 1.0;
}

float cylinder(in float h, in float r1, in float r2, in bool center, in vec3 xyz) {
	xyz.z /= h;
	float z = xyz.z;
	if (center) { z += 0.5; } else { xyz.z -= 0.5; }
	if (abs(xyz.z) > 0.5) { return 0.0; }
	float r = length(xyz.xy);
	float radius = mix(r1, r2, z);
	return r <= radius ? 1.0 : 0.0;
}

float multimatrixBlock0(in vec3 xyz) {
	mat4 xfm = inverse(mat4(vec4(1, 0, 0, 0), vec4(0, 1, 0, 0), vec4(0, 0, 1, 0), vec4(0, 0, 0, 1)));
	xyz = (vec4(xyz, 1.0) * xfm).xyz;
	return cylinder(float(8), float(6), float(6), true, xyz);
}

float multimatrixBlock1(in vec3 xyz) {
	mat4 xfm = inverse(mat4(vec4(1, 0, 0, -3), vec4(0, 1, 0, 0), vec4(0, 0, 1, -3), vec4(0, 0, 0, 1)));
	xyz = (vec4(xyz, 1.0) * xfm).xyz;
	return cube(vec3(6, 55.8, 6), false, xyz);
}

float multimatrixBlock2(in vec3 xyz) {
	mat4 xfm = inverse(mat4(vec4(0.697119, 0.716955, 0, 0), vec4(-0.716955, 0.697119, 0, 0), vec4(0, 0, 1, 0), vec4(0, 0, 0, 1)));
	xyz = (vec4(xyz, 1.0) * xfm).xyz;
	return multimatrixBlock0(xyz) + multimatrixBlock1(xyz);
}

float multimatrixBlock3(in vec3 xyz) {
	mat4 xfm = inverse(mat4(vec4(1, 0, 0, 38.0095), vec4(0, 1, 0, -33.7), vec4(0, 0, 1, 0), vec4(0, 0, 0, 1)));
	xyz = (vec4(xyz, 1.0) * xfm).xyz;
	return multimatrixBlock2(xyz);
}

float groupBlock4(in vec3 xyz) {
	return multimatrixBlock3(xyz);
}

float multimatrixBlock5(in vec3 xyz) {
	mat4 xfm = inverse(mat4(vec4(1, 0, 0, 18.1503), vec4(0, 1, 0, 91.5713), vec4(0, 0, 1, 0), vec4(0, 0, 0, 1)));
	xyz = (vec4(xyz, 1.0) * xfm).xyz;
	return cylinder(float(8), float(8), float(8), true, xyz);
}

float groupBlock6(in vec3 xyz) {
	return groupBlock4(xyz) + multimatrixBlock5(xyz);
}

float multimatrixBlock7(in vec3 xyz) {
	mat4 xfm = inverse(mat4(vec4(1, 0, 0, 0), vec4(0, 1, 0, 0), vec4(0, 0, 1, 40), vec4(0, 0, 0, 1)));
	xyz = (vec4(xyz, 1.0) * xfm).xyz;
	return groupBlock6(xyz);
}

float colorBlock8(in vec3 xyz) {
	return multimatrixBlock7(xyz);
}

float multimatrixBlock9(in vec3 xyz) {
	mat4 xfm = inverse(mat4(vec4(-1, 0, 0, 0), vec4(0, 1, 0, 0), vec4(0, 0, 1, 0), vec4(0, 0, 0, 1)));
	xyz = (vec4(xyz, 1.0) * xfm).xyz;
	return colorBlock8(xyz);
}

float multimatrixBlock10(in vec3 xyz) {
	mat4 xfm = inverse(mat4(vec4(1, 0, 0, 0), vec4(0, 1, 0, 0), vec4(0, 0, 1, 90), vec4(0, 0, 0, 1)));
	xyz = (vec4(xyz, 1.0) * xfm).xyz;
	return multimatrixBlock9(xyz);
}

float groupBlock11(in vec3 xyz) {
	return multimatrixBlock10(xyz);
}

float multimatrixBlock12(in vec3 xyz) {
	mat4 xfm = inverse(mat4(vec4(-1, 1.22465e-16, 2.46519e-32, 0), vec4(0, 2.22045e-16, -1, 0), vec4(-1.22465e-16, -1, -2.22045e-16, 0), vec4(0, 0, 0, 1)));
	xyz = (vec4(xyz, 1.0) * xfm).xyz;
	return groupBlock11(xyz);
}

float groupBlock13(in vec3 xyz) {
	return multimatrixBlock12(xyz);
}

void mainModel4(out vec4 materials, in vec3 xyz) {
	materials[0] = groupBlock13(xyz);
}

