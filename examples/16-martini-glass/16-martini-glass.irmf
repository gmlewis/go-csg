/*{
  irmf: "1.0",
  materials: ["PLA"],
  max: [99.5,99.5,80],
  min: [-99.5,-99.5,-80],
  units: "mm",
}*/

mat3 rotAxis(vec3 axis, float a) {
  // This is from: http://www.neilmendoza.com/glsl-rotation-about-an-arbitrary-axis/
  float s = sin(a);
  float c = cos(a);
  float oc = 1.0 - c;
  vec3 as = axis * s;
  mat3 p = mat3(axis.x * axis, axis.y * axis, axis.z * axis);
  mat3 q = mat3(c, - as.z, as.y, as.z, c, - as.x, - as.y, as.x, c);
  return p * oc + q;
}

mat4 rotZ(float angle) {
  return mat4(rotAxis(vec3(0, 0, 1), angle));
}

float testTwoLineSegments(in vec2 ll, in vec2 ul, in vec2 lr, in vec2 ur, in vec2 xy) {
	float lx = mix(ll.x,ul.x,(xy.y-ll.y)/(ul.y-ll.y));
	float rx = mix(lr.x,ur.x,(xy.y-lr.y)/(ur.y-lr.y));
	if (xy.x<lx || xy.x>rx) { return 0.0; }
	return 1.0;
}

float simplePolygon0(in vec3 xyz) {
	if (any(lessThan(xyz.xy, vec2(0,0))) || any(greaterThan(xyz.xy, vec2(99,159)))) { return 0.0; }
	if (xyz.y >= float(0) && xyz.y <= float(3)) { return testTwoLineSegments(vec2(0,0),vec2(0,69),vec2(50,0),vec2(47,3),xyz.xy); }
	if (xyz.y >= float(3) && xyz.y <= float(6)) { return testTwoLineSegments(vec2(0,0),vec2(0,69),vec2(47,3),vec2(6,6),xyz.xy); }
	if (xyz.y >= float(6) && xyz.y <= float(66)) { return testTwoLineSegments(vec2(0,0),vec2(0,69),vec2(6,6),vec2(6,66),xyz.xy); }
	if (xyz.y >= float(66) && xyz.y <= float(69)) { return testTwoLineSegments(vec2(0,0),vec2(0,69),vec2(6,66),vec2(99,159),xyz.xy); }
	if (xyz.y >= float(69) && xyz.y <= float(159)) { return testTwoLineSegments(vec2(0,69),vec2(96,159),vec2(6,66),vec2(99,159),xyz.xy); }
	return 1.0;
}

float rotateExtrudeBlock1(in vec3 xyz) {
	float angle = atan(xyz.y, xyz.x);
	if (angle<0.) { angle+=(2.*3.1415926535897932384626433832795); }
	if (angle>float(360)*3.1415926535897932384626433832795/180.0) { return 0.0; }
	vec3 slice=(vec4(xyz,1)*rotZ(-angle)).xyz;
	xyz = slice.xzy;
	return simplePolygon0(xyz);
}

float difference2(in vec3 xyz) {
	return clamp(rotateExtrudeBlock1(xyz), 0.0, 1.0);
}

void mainModel4(out vec4 materials, in vec3 xyz) {
	xyz += vec3(0, 0, 79.5);
	materials[0] = difference2(xyz);
}

